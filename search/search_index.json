{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Zel Ecosystem \u2693\ufe0e The complete package blockchain suite that enables users to interact with crypto (and blockchain in general) with ease. Zel Modules \u2693\ufe0e Logo Module Description Zel Currency Onboarding & Gas for the Ecosystem ZelCore Multi-asset wallet & platform to use the Ecosystem ZelNodes Enterprise-grade computing hardware to underpin the Ecosystem ZelFlux Control layer to deploy secured dApps on the Ecosystem ZelID Navigate seamlessly and anonymously through the Ecosystem ZelLabs Get proper incubation for your blockchain project with the Ecosystem ZelFoundation The community-controlled wing of the Ecosystem Current Module Builds \u2693\ufe0e Module Version Zel Daemon v4.0.3 ZelCore v3.10.0 ZelCore Mobile v3.6.0 ZelNodes v1.0 ZelFlux v1.1.0 ZelBench v1.4.2 ZelID v1.0","title":"Welcome to the Zel Ecosystem"},{"location":"#welcome-to-the-zel-ecosystem","text":"The complete package blockchain suite that enables users to interact with crypto (and blockchain in general) with ease.","title":"Welcome to the Zel Ecosystem"},{"location":"#zel-modules","text":"Logo Module Description Zel Currency Onboarding & Gas for the Ecosystem ZelCore Multi-asset wallet & platform to use the Ecosystem ZelNodes Enterprise-grade computing hardware to underpin the Ecosystem ZelFlux Control layer to deploy secured dApps on the Ecosystem ZelID Navigate seamlessly and anonymously through the Ecosystem ZelLabs Get proper incubation for your blockchain project with the Ecosystem ZelFoundation The community-controlled wing of the Ecosystem","title":"Zel Modules"},{"location":"#current-module-builds","text":"Module Version Zel Daemon v4.0.3 ZelCore v3.10.0 ZelCore Mobile v3.6.0 ZelNodes v1.0 ZelFlux v1.1.0 ZelBench v1.4.2 ZelID v1.0","title":"Current Module Builds"},{"location":"flux/flux/","text":"","title":"Flux Overview"},{"location":"flux/flux_api/","text":"Flux OpenAPI Specification \u2693\ufe0e Links to visit to learn more about Flux API. SwaggerUI Reference Documentation (ReDoc)","title":"Flux API"},{"location":"flux/flux_api/#flux-openapi-specification","text":"Links to visit to learn more about Flux API. SwaggerUI Reference Documentation (ReDoc)","title":"Flux OpenAPI Specification"},{"location":"flux/flux_gov/","text":"Governance \u2693\ufe0e Under development... \u2693\ufe0e","title":"Governance"},{"location":"flux/flux_gov/#governance","text":"","title":"Governance"},{"location":"flux/flux_gov/#under-development","text":"","title":"Under development..."},{"location":"flux/flux_roadmap/","text":"","title":"Roadmap"},{"location":"foundation/zelfoundation/","text":"Community-driven \u2693\ufe0e Zel is a fair-mined, community-based POW coin striving towards building an entire ecosystem of blockchain products including a robust user platform, high-availability computational network, and dapp development platform. Currently the project does not utilize any institutional funding, and the Zel Foundation fund was established to pursue technology advancements for Zel led by the community and other 3 rd party developers. Zel Foundation Operation \u2693\ufe0e Zel began life with a development fund of ~13.2 million ZEL, to be strictly used for development of the project. In August 2018, the fund was allocated to the Foundation wing (~7.9 million), and now lives in two separate addresses, the Locked account and the Operational account . Each year, 10% of the original allotment is moved from the Locked account to the Operational account (790,000 ZEL) to be used on furthering Zel development, which includes things like: grants for wallet/daemon updates, development of ZelNodes features and dapps related to the Zel Ecosystem, marketing/PR, anything that benefits the project and Community. Ultimately, there will be a board of Community members that control the day-to-day operations of the Foundation, separate from the Zel core team, and responsible to the Zel Community.","title":"Zel Foundation Overview"},{"location":"foundation/zelfoundation/#community-driven","text":"Zel is a fair-mined, community-based POW coin striving towards building an entire ecosystem of blockchain products including a robust user platform, high-availability computational network, and dapp development platform. Currently the project does not utilize any institutional funding, and the Zel Foundation fund was established to pursue technology advancements for Zel led by the community and other 3 rd party developers.","title":"Community-driven"},{"location":"foundation/zelfoundation/#zel-foundation-operation","text":"Zel began life with a development fund of ~13.2 million ZEL, to be strictly used for development of the project. In August 2018, the fund was allocated to the Foundation wing (~7.9 million), and now lives in two separate addresses, the Locked account and the Operational account . Each year, 10% of the original allotment is moved from the Locked account to the Operational account (790,000 ZEL) to be used on furthering Zel development, which includes things like: grants for wallet/daemon updates, development of ZelNodes features and dapps related to the Zel Ecosystem, marketing/PR, anything that benefits the project and Community. Ultimately, there will be a board of Community members that control the day-to-day operations of the Foundation, separate from the Zel core team, and responsible to the Zel Community.","title":"Zel Foundation Operation"},{"location":"zel/zel/","text":"","title":"Zel Ecosystem Overview"},{"location":"zel/zel_con1/","text":"Zel Forum Crypto Conference \u2693\ufe0e For Blockchain Developers, Miners, and Investors Info Live-streamed June 6 th & 7 th , 2020 Agenda \u2693\ufe0e Video Links \u2693\ufe0e Topic Speaker Link Time Zcoin Reuben Yap link 47:17 Flux Parker Honeyman link 46:51 Roundtable Various link 57:47 Keynote Daniel Keller link 23:51 Paradigm Healthcare Daniel Keller link 31:11 Deterministic Nodes Jeremy Anderson link 26:54 Voskcoin Vosk link 33:49 Kadena Emily Pillmore link 34:17 Kucoin Amy link 20:21 Veil Joshua Marriage link 47:05 CoinRequest Milo link 16:34 CoinSwitch Sharan Nair link 19:59 InstaSwap Tomas link 21:47 MineYourBiz Seth Estrada link 42:57 Crypto Legal Tim Bukher link 43:14 N9 June link 43:56 VeriBlock Various link 30:00 Speaker Screens \u2693\ufe0e","title":"Zel Crypto Conference"},{"location":"zel/zel_con1/#zel-forum-crypto-conference","text":"For Blockchain Developers, Miners, and Investors Info Live-streamed June 6 th & 7 th , 2020","title":"Zel Forum Crypto Conference"},{"location":"zel/zel_con1/#agenda","text":"","title":"Agenda"},{"location":"zel/zel_con1/#video-links","text":"Topic Speaker Link Time Zcoin Reuben Yap link 47:17 Flux Parker Honeyman link 46:51 Roundtable Various link 57:47 Keynote Daniel Keller link 23:51 Paradigm Healthcare Daniel Keller link 31:11 Deterministic Nodes Jeremy Anderson link 26:54 Voskcoin Vosk link 33:49 Kadena Emily Pillmore link 34:17 Kucoin Amy link 20:21 Veil Joshua Marriage link 47:05 CoinRequest Milo link 16:34 CoinSwitch Sharan Nair link 19:59 InstaSwap Tomas link 21:47 MineYourBiz Seth Estrada link 42:57 Crypto Legal Tim Bukher link 43:14 N9 June link 43:56 VeriBlock Various link 30:00","title":"Video Links"},{"location":"zel/zel_con1/#speaker-screens","text":"","title":"Speaker Screens"},{"location":"zel/zel_daemoninstall/","text":"This guide walks through the step-by-step process of building the Zel daemon/CLI from the open-source repository on Github Zel Github Recommended System Specs: 2 or more CPU threads 64-bit Linux (Ubuntu 18.04) 4+ GB RAM 25+ GB Storage Warning If setting up a ZelNode, follow XXXX Guide Running a standard p2p node does not reward ZEL Building for Linux \u2693\ufe0e Info We officially support Ubuntu 18.04 LTS \"Bionic Beaver\". Source has been tested for most popular Ubuntu, Debian & Fedora distros. Install Ubuntu/Debian dependencies \u2693\ufe0e sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install build-essential pkg-config libc6-dev m4 \\ g++-multilib autoconf libtool ncurses-dev unzip git python \\ python-zmq zlib1g-dev wget curl bsdmainutils automake -y Install Fedora dependencies \u2693\ufe0e Warning Only do this step if not using Ubuntu/Debian sudo dnf install git pkgconfig automake autoconf ncurses-devel \\ python python-zmq wget gtest-devel gcc gcc-c++ libtool curl patch -y Build zelcashd \u2693\ufe0e git clone https://github.com/zelcash/zelcash.git && cd zelcash && git checkout master && ./zcutil/build.sh -j $( nproc ) Fetch Parameter files \u2693\ufe0e ./zcutil/fetch-params.sh Create Config File \u2693\ufe0e mkdir ~/.zelcash echo \"rpcuser=username\" >> ~/.zelcash/zelcash.conf echo \"rpcpassword=`head -c 32 /dev/urandom | base64`\" >> ~/.zelcash/zelcash.conf echo \"rpcallowip=127.0.0.1\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.cash\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.zelcore.io\" >> ~/.zelcash/zelcash.conf echo \"txindex=1\" >> ~/.zelcash/zelcash.conf echo \"server=1\" >> ~/.zelcash/zelcash.conf Run zelcashd \u2693\ufe0e ./src/zelcashd Building for Mac \u2693\ufe0e Install Dependencies \u2693\ufe0e xcode-select --install /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" brew install cmake autoconf libtool automake coreutils pkgconfig gmp wget brew install gcc5 --without-multilib Build \u2693\ufe0e git clone https://github.com/zelcash/zelcash.git cd zelcash git checkout master ./zcutil/build.sh -j$(sysctl -n hw.ncpu) Fetch Parameter files \u2693\ufe0e ./zcutil/fetch-params.sh Create Config File \u2693\ufe0e mkdir ~/.zelcash echo \"rpcuser=username\" >> ~/.zelcash/zelcash.conf echo \"rpcpassword=`head -c 32 /dev/urandom | base64`\" >> ~/.zelcash/zelcash.conf echo \"rpcallowip=127.0.0.1\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.cash\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.zelcore.io\" >> ~/.zelcash/zelcash.conf echo \"txindex=1\" >> ~/.zelcash/zelcash.conf echo \"server=1\" >> ~/.zelcash/zelcash.conf Run zelcashd \u2693\ufe0e ./src/zelcashd Building for Windows \u2693\ufe0e Install Dependencies \u2693\ufe0e sudo apt-get install build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev cmake unzip git python zlib1g-dev wget bsdmainutils automake mingw-w64 curl Build zelcashd \u2693\ufe0e git clone https://github.com/zelcash/zelcash.git cd zelcash git checkout master ./zcutil/build-win.sh -j$(nproc) Create Config File \u2693\ufe0e Create folder: % AppData %/ Roaming / zelcash Create a *.txt file zelcash . conf in above folder. Copy/paste the below into TXT file and save, then close. Change RPC username & password rpcuser=randomusername rpcpassword=RandomPasswordChangeme rpcallowip=127.0.0.1 addnode=explorer.zel.cash addnode=explorer.zel.zelcore.io txindex=1 server=1 Download the below links into this folder https://zelcore.io/zelcore/sapling-output.params https://zelcore.io/zelcore/sapling-spend.params https://zelcore.io/zelcore/sprout-groth16.params https://zelcore.io/zelcore/sprout-proving.key https://zelcore.io/zelcore/sprout-verifying.key Run zelcashd \u2693\ufe0e zelcashd.exe Install using APT repo \u2693\ufe0e Tip The APT repo works with many popular Ubuntu & Debian distros. echo 'deb https://zelcash.github.io/aptrepo/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list && gpg --keyserver keyserver.ubuntu.com --recv 4B69CA27A986265D && gpg --export 4B69CA27A986265D | sudo apt-key add - && sudo apt-get update && sudo apt-get install zelcash This installs zelcashd , zelcash-cli , zelcash-tx & zelcash-fetch-params . sh bash zelcash-fetch-params.sh Note Create Config File as shown in the example","title":"Installing Daemon"},{"location":"zel/zel_daemoninstall/#building-for-linux","text":"Info We officially support Ubuntu 18.04 LTS \"Bionic Beaver\". Source has been tested for most popular Ubuntu, Debian & Fedora distros.","title":"Building for Linux"},{"location":"zel/zel_daemoninstall/#install-ubuntudebian-dependencies","text":"sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install build-essential pkg-config libc6-dev m4 \\ g++-multilib autoconf libtool ncurses-dev unzip git python \\ python-zmq zlib1g-dev wget curl bsdmainutils automake -y","title":"Install Ubuntu/Debian dependencies"},{"location":"zel/zel_daemoninstall/#install-fedora-dependencies","text":"Warning Only do this step if not using Ubuntu/Debian sudo dnf install git pkgconfig automake autoconf ncurses-devel \\ python python-zmq wget gtest-devel gcc gcc-c++ libtool curl patch -y","title":"Install Fedora dependencies"},{"location":"zel/zel_daemoninstall/#build-zelcashd","text":"git clone https://github.com/zelcash/zelcash.git && cd zelcash && git checkout master && ./zcutil/build.sh -j $( nproc )","title":"Build zelcashd"},{"location":"zel/zel_daemoninstall/#fetch-parameter-files","text":"./zcutil/fetch-params.sh","title":"Fetch Parameter files"},{"location":"zel/zel_daemoninstall/#create-config-file","text":"mkdir ~/.zelcash echo \"rpcuser=username\" >> ~/.zelcash/zelcash.conf echo \"rpcpassword=`head -c 32 /dev/urandom | base64`\" >> ~/.zelcash/zelcash.conf echo \"rpcallowip=127.0.0.1\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.cash\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.zelcore.io\" >> ~/.zelcash/zelcash.conf echo \"txindex=1\" >> ~/.zelcash/zelcash.conf echo \"server=1\" >> ~/.zelcash/zelcash.conf","title":"Create Config File"},{"location":"zel/zel_daemoninstall/#run-zelcashd","text":"./src/zelcashd","title":"Run zelcashd"},{"location":"zel/zel_daemoninstall/#building-for-mac","text":"","title":"Building for Mac"},{"location":"zel/zel_daemoninstall/#install-dependencies","text":"xcode-select --install /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" brew install cmake autoconf libtool automake coreutils pkgconfig gmp wget brew install gcc5 --without-multilib","title":"Install Dependencies"},{"location":"zel/zel_daemoninstall/#build","text":"git clone https://github.com/zelcash/zelcash.git cd zelcash git checkout master ./zcutil/build.sh -j$(sysctl -n hw.ncpu)","title":"Build"},{"location":"zel/zel_daemoninstall/#fetch-parameter-files_1","text":"./zcutil/fetch-params.sh","title":"Fetch Parameter files"},{"location":"zel/zel_daemoninstall/#create-config-file_1","text":"mkdir ~/.zelcash echo \"rpcuser=username\" >> ~/.zelcash/zelcash.conf echo \"rpcpassword=`head -c 32 /dev/urandom | base64`\" >> ~/.zelcash/zelcash.conf echo \"rpcallowip=127.0.0.1\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.cash\" >> ~/.zelcash/zelcash.conf echo \"addnode=explorer.zel.zelcore.io\" >> ~/.zelcash/zelcash.conf echo \"txindex=1\" >> ~/.zelcash/zelcash.conf echo \"server=1\" >> ~/.zelcash/zelcash.conf","title":"Create Config File"},{"location":"zel/zel_daemoninstall/#run-zelcashd_1","text":"./src/zelcashd","title":"Run zelcashd"},{"location":"zel/zel_daemoninstall/#building-for-windows","text":"","title":"Building for Windows"},{"location":"zel/zel_daemoninstall/#install-dependencies_1","text":"sudo apt-get install build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev cmake unzip git python zlib1g-dev wget bsdmainutils automake mingw-w64 curl","title":"Install Dependencies"},{"location":"zel/zel_daemoninstall/#build-zelcashd_1","text":"git clone https://github.com/zelcash/zelcash.git cd zelcash git checkout master ./zcutil/build-win.sh -j$(nproc)","title":"Build zelcashd"},{"location":"zel/zel_daemoninstall/#create-config-file_2","text":"Create folder: % AppData %/ Roaming / zelcash Create a *.txt file zelcash . conf in above folder. Copy/paste the below into TXT file and save, then close. Change RPC username & password rpcuser=randomusername rpcpassword=RandomPasswordChangeme rpcallowip=127.0.0.1 addnode=explorer.zel.cash addnode=explorer.zel.zelcore.io txindex=1 server=1 Download the below links into this folder https://zelcore.io/zelcore/sapling-output.params https://zelcore.io/zelcore/sapling-spend.params https://zelcore.io/zelcore/sprout-groth16.params https://zelcore.io/zelcore/sprout-proving.key https://zelcore.io/zelcore/sprout-verifying.key","title":"Create Config File"},{"location":"zel/zel_daemoninstall/#run-zelcashd_2","text":"zelcashd.exe","title":"Run zelcashd"},{"location":"zel/zel_daemoninstall/#install-using-apt-repo","text":"Tip The APT repo works with many popular Ubuntu & Debian distros. echo 'deb https://zelcash.github.io/aptrepo/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list && gpg --keyserver keyserver.ubuntu.com --recv 4B69CA27A986265D && gpg --export 4B69CA27A986265D | sudo apt-key add - && sudo apt-get update && sudo apt-get install zelcash This installs zelcashd , zelcash-cli , zelcash-tx & zelcash-fetch-params . sh bash zelcash-fetch-params.sh Note Create Config File as shown in the example","title":"Install using APT repo"},{"location":"zel/zel_exchanges/","text":"","title":"Zel Exchanges"},{"location":"zel/zel_roadmap/","text":"","title":"Roadmap"},{"location":"zel/zel_social/","text":"Zel Ecosystem Social Media Links \u2693\ufe0e Platform Link Zel Website https://zel.network Discord https://discord.io/zel Zel Twitter https://twitter.com/Zelcash ZelCore Twitter https://twitter.com/Zel_Core Medium https://medium.com/@ZelOfficial YouTube https://www.youtube.com/ZelLabs Telegram-English https://t.me/zelhub Telegram-Russian https://t.me/zelcashru Telegram-Chinese https://t.me/zelcashcn Bitcointalk ANN https://bitcointalk.org/index.php?topic=2853688.0 Reddit https://reddit.com/r/ZelOfficial WeChat Request access in Discord QQ 702288625 Weibo https://weibo.com/u/7070069949","title":"Social Media Links"},{"location":"zel/zel_social/#zel-ecosystem-social-media-links","text":"Platform Link Zel Website https://zel.network Discord https://discord.io/zel Zel Twitter https://twitter.com/Zelcash ZelCore Twitter https://twitter.com/Zel_Core Medium https://medium.com/@ZelOfficial YouTube https://www.youtube.com/ZelLabs Telegram-English https://t.me/zelhub Telegram-Russian https://t.me/zelcashru Telegram-Chinese https://t.me/zelcashcn Bitcointalk ANN https://bitcointalk.org/index.php?topic=2853688.0 Reddit https://reddit.com/r/ZelOfficial WeChat Request access in Discord QQ 702288625 Weibo https://weibo.com/u/7070069949","title":"Zel Ecosystem Social Media Links"},{"location":"zel/zel_team/","text":"Parker Honeyman \u2693\ufe0e Chief Operations Officer, Community Management & Business Development \u2693\ufe0e Parker is a mechanical engineer from the South Bay Area, CA and works in the medical device field consulting for product development. Parker helps keep things rolling behind the scenes at Zel Technologies and within the Zel Community. Wearing many hats throughout the day from content development to researching hardware and new technologies. Daniel Keller \u2693\ufe0e Chief Operations Officer, Community Management & Business Development \u2693\ufe0e Daniel bring over 20 years IT experience in healthcare and nonprofit charity works. An entrepreneur, investor and disruptive technology advocate, Daniel has a ethos that resinates with many on the Zel Team, focusing on projects that are uplifting to humanity. Daniel focuses on business development but also charity initiatives at Zel Technologies. Tade\u00e1\u0161 Kmenta(TheTrunk) \u2693\ufe0e Co-Founder and Developer \u2693\ufe0e Tade\u00e1\u0161 has created most parts of ZelCore, Zelcore Mobile, its libraies, infrastructure backend solutions and all other Zel services. The invention of Flux 'OS' on top of Zel brought decentralised computation network to live and that is a project on which you would find him developing the most. Valter Silva \u2693\ufe0e Developer \u2693\ufe0e Valter is a senior developer in JAVA and C# from Portugal. Interested in learning about new technologies, Valter entered the crypto space in late 2017. He has been part of the Zel Team since summer 2018 and overhauled the outdates ZelMate and ZecMate wallets (swing.) He now focuses on various development projects within the team. Jeremy Anderson \u2693\ufe0e Developer \u2693\ufe0e Jeremy Anderson is an expert software engineer who has made contributions to PIVX, Ravencoin, Veil and Zel. He focuses on ZelNodes and Zel source. ZelNodes is the first tiered deterministic node system thanks to Jeremy. David Robinson \u2693\ufe0e Marketing and Graphic Designer \u2693\ufe0e David discovered Zel in early 2018, becoming a community moderator later that year. He is now part of the Marketing team creating graphics for Social media marketing. Lukas Mattecka \u2693\ufe0e Community Lead & Business Development \u2693\ufe0e Currently studying economic science in the university of Basel, Swizz. He has been Crypto enthusiast since June 2018 and found out about Zel in the end of the same year. Joined the Team in late 2019 as Community lead.","title":"Zel Team"},{"location":"zel/zel_team/#parker-honeyman","text":"","title":"Parker Honeyman"},{"location":"zel/zel_team/#chief-operations-officer-community-management-business-development","text":"Parker is a mechanical engineer from the South Bay Area, CA and works in the medical device field consulting for product development. Parker helps keep things rolling behind the scenes at Zel Technologies and within the Zel Community. Wearing many hats throughout the day from content development to researching hardware and new technologies.","title":"Chief Operations Officer, Community Management &amp; Business Development"},{"location":"zel/zel_team/#daniel-keller","text":"","title":"Daniel Keller"},{"location":"zel/zel_team/#chief-operations-officer-community-management-business-development_1","text":"Daniel bring over 20 years IT experience in healthcare and nonprofit charity works. An entrepreneur, investor and disruptive technology advocate, Daniel has a ethos that resinates with many on the Zel Team, focusing on projects that are uplifting to humanity. Daniel focuses on business development but also charity initiatives at Zel Technologies.","title":"Chief Operations Officer, Community Management &amp; Business Development"},{"location":"zel/zel_team/#tadeas-kmentathetrunk","text":"","title":"Tade\u00e1\u0161 Kmenta(TheTrunk)"},{"location":"zel/zel_team/#co-founder-and-developer","text":"Tade\u00e1\u0161 has created most parts of ZelCore, Zelcore Mobile, its libraies, infrastructure backend solutions and all other Zel services. The invention of Flux 'OS' on top of Zel brought decentralised computation network to live and that is a project on which you would find him developing the most.","title":"Co-Founder and Developer"},{"location":"zel/zel_team/#valter-silva","text":"","title":"Valter Silva"},{"location":"zel/zel_team/#developer","text":"Valter is a senior developer in JAVA and C# from Portugal. Interested in learning about new technologies, Valter entered the crypto space in late 2017. He has been part of the Zel Team since summer 2018 and overhauled the outdates ZelMate and ZecMate wallets (swing.) He now focuses on various development projects within the team.","title":"Developer"},{"location":"zel/zel_team/#jeremy-anderson","text":"","title":"Jeremy Anderson"},{"location":"zel/zel_team/#developer_1","text":"Jeremy Anderson is an expert software engineer who has made contributions to PIVX, Ravencoin, Veil and Zel. He focuses on ZelNodes and Zel source. ZelNodes is the first tiered deterministic node system thanks to Jeremy.","title":"Developer"},{"location":"zel/zel_team/#david-robinson","text":"","title":"David Robinson"},{"location":"zel/zel_team/#marketing-and-graphic-designer","text":"David discovered Zel in early 2018, becoming a community moderator later that year. He is now part of the Marketing team creating graphics for Social media marketing.","title":"Marketing and Graphic Designer"},{"location":"zel/zel_team/#lukas-mattecka","text":"","title":"Lukas Mattecka"},{"location":"zel/zel_team/#community-lead-business-development","text":"Currently studying economic science in the university of Basel, Swizz. He has been Crypto enthusiast since June 2018 and found out about Zel in the end of the same year. Joined the Team in late 2019 as Community lead.","title":"Community Lead &amp; Business Development"},{"location":"zelcore/zelcore/","text":"Info Download ZelCore Multi-asset Wallet Today","title":"ZelCore Overview"},{"location":"zelcore/zelcore_%2B/","text":"","title":"ZelCore+"},{"location":"zelcore/zelcore_assets/","text":"","title":"ZelCore Supported Assets"},{"location":"zelcore/zelcore_features/","text":"Features ZelID A decentralized authentication protocol that is truly seamless, secure, and private. A digital identity you control for cross-platform authentication. Check out the ZelID section for more info. API Trading Connect to Exchanges with your API credentials and trade directly from ZelCore. Quick Swap Exchanges Trade hassle free with Quick Swap exchanges that are integrated. Wallet Connect Allows connection to Web3 apps such as UniSwap using WalletConnect protocol. CruxID Human readable payment address for all your crypto assets. Portfolio Tracker Track assets(ZelCore+ only) ZelNode Tracker Track your ZelNodes(ZelCore+ only)","title":"ZelCore Features"},{"location":"zelid/zelid/","text":"","title":"ZelID Overview"},{"location":"zelid/zelid_d2fa/","text":"","title":"d2FA Security Layer"},{"location":"zelid/zelid_easylogin/","text":"","title":"Easy Login"},{"location":"zelid/zelid_signing/","text":"","title":"Message Signing"},{"location":"zellabs/zellabs/","text":"","title":"ZelLabs Overview"},{"location":"zelnodes/zelnode_benchcommands/","text":"ZelBench Commands \u2693\ufe0e This page describes the available CLI commands for ZelNode Benchmarking Daemon Note These commands are available when SSH'd into your ZelNode or through your VPS's dashboard/console List of Commands getinfo getstatus signzelnodetransactions restartnodebenchmarks getbenchmarks Command Explanations \u2693\ufe0e getinfo returns general zelbench daemon info zelbench-cli getinfo Example Response { \u2007\u2007\"version\": \"1.4.2\", \u2007\u2007\"rpcport\": 16224 } getstatus returns current connection status and ZelNode tier zelbench-cli getstatus Example Response { \u2007\u2007\"status\": \"online\", \u2007\u2007\"benchmarking\": \"BAMF\", \u2007\u2007\"zelback\": \"connected\" } signzelnodetransaction Command to get benchmarkd to sign a zelnode broadcast zelbench-cli signzelnodebroadcast \"HEXSTRING\" Info \"HEXSTRING\" - (string) The hex encoded zelnode broadcast message restartnodebenchmarks re-run ZelNode benchmarking tests zelbench-cli restartnodebenchmarks Info ZelNode will re-run performance tests for hardware configuration, drive write speeds, and CPU calculation speeds getbenchmarks output latest benchmarking scores zelbench-cli getbenchmarks Example Response { \u2007\u2007\"ipaddress\": \"YOURIPv4\", \u2007\u2007\"status\": \"BAMF\", \u2007\u2007\"time\": 1586302461, \u2007\u2007\"cores\": 8, \u2007\u2007\"ram\": 32, \u2007\u2007\"ssd\": 0, \u2007\u2007\"hdd\": 4711.2998046875, \u2007\u2007\"ddwrite\": 517.530029296875, \u2007\u2007\"eps\": 1057.89794921875 } Warning It is OK if benchmarking is showing \"hdd\" instead of \"ssd\" for now. The \"ddwrite\" speeds telling the network that your drive(s) are SSDs","title":"ZelBench Commands"},{"location":"zelnodes/zelnode_benchcommands/#zelbench-commands","text":"This page describes the available CLI commands for ZelNode Benchmarking Daemon Note These commands are available when SSH'd into your ZelNode or through your VPS's dashboard/console List of Commands getinfo getstatus signzelnodetransactions restartnodebenchmarks getbenchmarks","title":"ZelBench Commands"},{"location":"zelnodes/zelnode_benchcommands/#command-explanations","text":"getinfo returns general zelbench daemon info zelbench-cli getinfo Example Response { \u2007\u2007\"version\": \"1.4.2\", \u2007\u2007\"rpcport\": 16224 } getstatus returns current connection status and ZelNode tier zelbench-cli getstatus Example Response { \u2007\u2007\"status\": \"online\", \u2007\u2007\"benchmarking\": \"BAMF\", \u2007\u2007\"zelback\": \"connected\" } signzelnodetransaction Command to get benchmarkd to sign a zelnode broadcast zelbench-cli signzelnodebroadcast \"HEXSTRING\" Info \"HEXSTRING\" - (string) The hex encoded zelnode broadcast message restartnodebenchmarks re-run ZelNode benchmarking tests zelbench-cli restartnodebenchmarks Info ZelNode will re-run performance tests for hardware configuration, drive write speeds, and CPU calculation speeds getbenchmarks output latest benchmarking scores zelbench-cli getbenchmarks Example Response { \u2007\u2007\"ipaddress\": \"YOURIPv4\", \u2007\u2007\"status\": \"BAMF\", \u2007\u2007\"time\": 1586302461, \u2007\u2007\"cores\": 8, \u2007\u2007\"ram\": 32, \u2007\u2007\"ssd\": 0, \u2007\u2007\"hdd\": 4711.2998046875, \u2007\u2007\"ddwrite\": 517.530029296875, \u2007\u2007\"eps\": 1057.89794921875 } Warning It is OK if benchmarking is showing \"hdd\" instead of \"ssd\" for now. The \"ddwrite\" speeds telling the network that your drive(s) are SSDs","title":"Command Explanations"},{"location":"zelnodes/zelnode_setupfull/","text":"Deterministic Zelnode and Zelflux Install Guide \u2693\ufe0e This guide will be using the install script on Vultr's VPS platform \u2693\ufe0e Note Note: All test runs of this install script have only been done on VPS platforms and most likely will not work on personal home servers. USE AT OWN RISK. Requirements Collateral (10K Basic/ 25K Super/ 100K BAMF) Exchange List Control wallet and will recommend to use Zelcore SSH client such as MobaXterm or Putty VPS that meets the required specs for the tier | Tier | vCore | Ram | SSD | Bandwidth | |-------|-------|-------|--------|-------------------| | BAMF | 8 | 32 GB | 600 GB | 6 TB @ 100 mbps | | SUPER | 4 | 8 GB | 150 GB | 4 TB @ 100 mbps | | BASIC | 2 | 4 GB | 50 GB | 2.5 TB @ 100 mbps | Setting up Control Wallet \u2693\ufe0e Zel Full Node on ZelCore Login to your Zelcore account and set automatic log out to never. Select Zel from your portfolio, click on the 3 dots in top right corner to see options, and start full node . If you don't have a Sapling address create one first and backup your private keys. To create a Sapling address click on Receive and then New Sapling Address . Now click on Tools , Wallet Management , then Import / Export . Click to choose path on Export option and export to a location of your choice. Save this offline somewhere safe. Also backup the wallet . dat file which you could find in your appdata roaming folder ( Windows ), library app folder ( Mac ), or . zelcash ( Linux ) . Click on Receiving Address and copy one of your transparent address you want to send your collateral to. Send the exact amount of Zel for your Zelnode collateral to the transparent address you just copied all in one transaction no more no less. Keep in mind with this upgrade to deterministic Zelnodes you now how to wait 100 confirmations ( 3 . 5 hours ) before starting your Zelnode. So before moving on to the next step go do something and kill some time. Setting up VPS \u2693\ufe0e ZelNode and Flux setup Now time to setup the Zelnode on the VPS. Whether you use Vultr, Digital Ocean, or Hetzner make sure you select the right server with the hardware specs you need for the Zelnode you are trying to setup. You will fail to get the Zelnode on the network if you try on a server that doesn't meet the requirements. Following images are from Vultr and for a Basic Zelnode. Deploy new server Select a location Choose Ubuntu 18 . 04 as your OS ( recommended ) Name your server and deploy To access your server open up your SSH client and add your IP address. Will be using MobaXterm for this guide. Click Session SSH as your session type Your VPS IP address in Remote Host and give it a name under Bookmark Settings Login as root, copy password you got from your VPS provider, and right click to paste. You won't see password being typed out but it's there so hit enter after pasting. Create a user, add user to the sudo group, install docker from their apt repo, add user to the docker group, and reboot. List of commands to do all this. Change USERNAME to name of your choice and replace USERNAME with one you chose in following commands adduser USERNAME adduser USERNAME sudo apt-get update && apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" && apt-get update && apt-get install docker-ce docker-ce-cli containerd.io -y adduser USERNAME docker reboot You will be prompted to add user info after you create a password. Just leave them blank and hit enter as it is not required. Final Steps \u2693\ufe0e Configure and Run Install Script Back to your full node on Zelcore. In the Zelnodes section which is in the bottom right select the Zelnode Wizard to start your Zelnode configuration. You will be prompted to backup keys but since you did it earlier you could just select skip. Select the tier Add your VPS IP address in front of the port ( Ctrl + v to paste ) Select the available output Give the Zelnode an alias Open up a text editor such as notepad and copy paste the Zelnode private key , transaction id , and the output index just as I have it in image below. This will make it easier to just copy and paste when you run the install script as it will prompt you for this info during the install. Save and continue. Assuming you have waited 100 confirms since making the collateral transaction click Activate my Zelnode if not click on the X and you could start it once you have the confirmations. Back on your SSH client log back in to your VPS but this time as the user you created. Do not login as root . Once logged in run the following command to start the installation script. bash -i < ( curl -s https://raw.githubusercontent.com/dk808/deterministic-zelnode-script/master/install.sh ) Script will prompt you the list below. Confirmation of SSH port you ' re using select yes unless you changed it Confirmation of IP address of VPS script detected To add swap space if none is detected Zelnode Private Key ( this is first value you copied to the text editor ) Zelnode Collateral TxID ( second value on text editor ) Collateral TxID output index ( last value on the text editor ) Ask if you want to bootstrap Mongodb db for zelcash and I highly recommend you select Yes Your ZelID ( You could find this under Apps in your Zelcore wallet ) Your CruxID ( Create one in the Apps section of your Zelcore wallet ) Your ZelID is not your username but the set of values under the QR code as shown in the clip below. Note If you selected to bootstrap Mongodb it could take awhile during the loop that refreshes every 30 sec. as not only are you waiting for chain to sync but also Mongodb to sync. When refresh loop first starts do not worry if you don't see a block number next to \"Mongodb on block\" as it takes a few min for Zelflux to start up in the background. Loop will stop on it's own once it's synced. At the end of the install it will give some tips on a few commands and the IPaddress : port for you to enter as your url on Chrome to access Flux. Once the refresh loop ends at end of script start your Zelnode from Zelcore/Zelmate if you haven't already. Wait about 5-10 min and enter zelcash-cli getzelnodestatus to check status of your Zelnode. Any further support please join Zel's Discord . Tip Highly recommend setting up SSH Key login and disabling password login for your VPS. Any donations are welcomed and appreciated. Thanks. CruxID dk808@zel.crux BTC 18i3ba5wkG8XoYT3y8JP58yWwvMgEkHNHK ZEL t1RaebuW5iav8QBVwuZ7WCx5SCaYm2WH2Sk ETH 0x9ec5f94f680da4f0be8b6492020c84d60f99b5b7 LTC LSvzrnPmpvNb4M9D9GHgMA3HA8ixQjigsT","title":"Set Up ZelNode | RECOMMENDED"},{"location":"zelnodes/zelnode_setupfull/#deterministic-zelnode-and-zelflux-install-guide","text":"","title":"Deterministic Zelnode and Zelflux Install Guide"},{"location":"zelnodes/zelnode_setupfull/#this-guide-will-be-using-the-install-script-on-vultrs-vps-platform","text":"Note Note: All test runs of this install script have only been done on VPS platforms and most likely will not work on personal home servers. USE AT OWN RISK. Requirements Collateral (10K Basic/ 25K Super/ 100K BAMF) Exchange List Control wallet and will recommend to use Zelcore SSH client such as MobaXterm or Putty VPS that meets the required specs for the tier | Tier | vCore | Ram | SSD | Bandwidth | |-------|-------|-------|--------|-------------------| | BAMF | 8 | 32 GB | 600 GB | 6 TB @ 100 mbps | | SUPER | 4 | 8 GB | 150 GB | 4 TB @ 100 mbps | | BASIC | 2 | 4 GB | 50 GB | 2.5 TB @ 100 mbps |","title":"This guide will be using the install script on Vultr's VPS platform"},{"location":"zelnodes/zelnode_setupfull/#setting-up-control-wallet","text":"Zel Full Node on ZelCore Login to your Zelcore account and set automatic log out to never. Select Zel from your portfolio, click on the 3 dots in top right corner to see options, and start full node . If you don't have a Sapling address create one first and backup your private keys. To create a Sapling address click on Receive and then New Sapling Address . Now click on Tools , Wallet Management , then Import / Export . Click to choose path on Export option and export to a location of your choice. Save this offline somewhere safe. Also backup the wallet . dat file which you could find in your appdata roaming folder ( Windows ), library app folder ( Mac ), or . zelcash ( Linux ) . Click on Receiving Address and copy one of your transparent address you want to send your collateral to. Send the exact amount of Zel for your Zelnode collateral to the transparent address you just copied all in one transaction no more no less. Keep in mind with this upgrade to deterministic Zelnodes you now how to wait 100 confirmations ( 3 . 5 hours ) before starting your Zelnode. So before moving on to the next step go do something and kill some time.","title":"Setting up Control Wallet"},{"location":"zelnodes/zelnode_setupfull/#setting-up-vps","text":"ZelNode and Flux setup Now time to setup the Zelnode on the VPS. Whether you use Vultr, Digital Ocean, or Hetzner make sure you select the right server with the hardware specs you need for the Zelnode you are trying to setup. You will fail to get the Zelnode on the network if you try on a server that doesn't meet the requirements. Following images are from Vultr and for a Basic Zelnode. Deploy new server Select a location Choose Ubuntu 18 . 04 as your OS ( recommended ) Name your server and deploy To access your server open up your SSH client and add your IP address. Will be using MobaXterm for this guide. Click Session SSH as your session type Your VPS IP address in Remote Host and give it a name under Bookmark Settings Login as root, copy password you got from your VPS provider, and right click to paste. You won't see password being typed out but it's there so hit enter after pasting. Create a user, add user to the sudo group, install docker from their apt repo, add user to the docker group, and reboot. List of commands to do all this. Change USERNAME to name of your choice and replace USERNAME with one you chose in following commands adduser USERNAME adduser USERNAME sudo apt-get update && apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" && apt-get update && apt-get install docker-ce docker-ce-cli containerd.io -y adduser USERNAME docker reboot You will be prompted to add user info after you create a password. Just leave them blank and hit enter as it is not required.","title":"Setting up VPS"},{"location":"zelnodes/zelnode_setupfull/#final-steps","text":"Configure and Run Install Script Back to your full node on Zelcore. In the Zelnodes section which is in the bottom right select the Zelnode Wizard to start your Zelnode configuration. You will be prompted to backup keys but since you did it earlier you could just select skip. Select the tier Add your VPS IP address in front of the port ( Ctrl + v to paste ) Select the available output Give the Zelnode an alias Open up a text editor such as notepad and copy paste the Zelnode private key , transaction id , and the output index just as I have it in image below. This will make it easier to just copy and paste when you run the install script as it will prompt you for this info during the install. Save and continue. Assuming you have waited 100 confirms since making the collateral transaction click Activate my Zelnode if not click on the X and you could start it once you have the confirmations. Back on your SSH client log back in to your VPS but this time as the user you created. Do not login as root . Once logged in run the following command to start the installation script. bash -i < ( curl -s https://raw.githubusercontent.com/dk808/deterministic-zelnode-script/master/install.sh ) Script will prompt you the list below. Confirmation of SSH port you ' re using select yes unless you changed it Confirmation of IP address of VPS script detected To add swap space if none is detected Zelnode Private Key ( this is first value you copied to the text editor ) Zelnode Collateral TxID ( second value on text editor ) Collateral TxID output index ( last value on the text editor ) Ask if you want to bootstrap Mongodb db for zelcash and I highly recommend you select Yes Your ZelID ( You could find this under Apps in your Zelcore wallet ) Your CruxID ( Create one in the Apps section of your Zelcore wallet ) Your ZelID is not your username but the set of values under the QR code as shown in the clip below. Note If you selected to bootstrap Mongodb it could take awhile during the loop that refreshes every 30 sec. as not only are you waiting for chain to sync but also Mongodb to sync. When refresh loop first starts do not worry if you don't see a block number next to \"Mongodb on block\" as it takes a few min for Zelflux to start up in the background. Loop will stop on it's own once it's synced. At the end of the install it will give some tips on a few commands and the IPaddress : port for you to enter as your url on Chrome to access Flux. Once the refresh loop ends at end of script start your Zelnode from Zelcore/Zelmate if you haven't already. Wait about 5-10 min and enter zelcash-cli getzelnodestatus to check status of your Zelnode. Any further support please join Zel's Discord . Tip Highly recommend setting up SSH Key login and disabling password login for your VPS. Any donations are welcomed and appreciated. Thanks. CruxID dk808@zel.crux BTC 18i3ba5wkG8XoYT3y8JP58yWwvMgEkHNHK ZEL t1RaebuW5iav8QBVwuZ7WCx5SCaYm2WH2Sk ETH 0x9ec5f94f680da4f0be8b6492020c84d60f99b5b7 LTC LSvzrnPmpvNb4M9D9GHgMA3HA8ixQjigsT","title":"Final Steps"},{"location":"zelnodes/zelnode_setupmanual/","text":"Deterministic Zelnode and Zelflux Manual Install Guide \u2693\ufe0e This install guide will be using Ubuntu 18.04 as it's the Linux Distribution supported by Zel's Team. Requirements Collateral (10K Basic/ 25K Super/ 100K BAMF) Exchange List Control wallet and will recommend to use Zelcore SSH client such as MobaXterm or Putty VPS that meets the required specs for the tier | Tier | vCore | Ram | SSD | Bandwidth | |-------|-------|-------|--------|-------------------| | BAMF | 8 | 32 GB | 600 GB | 6 TB @ 100 mbps | | SUPER | 4 | 8 GB | 150 GB | 4 TB @ 100 mbps | | BASIC | 2 | 4 GB | 50 GB | 2.5 TB @ 100 mbps | Install Zelcash and Zelbench \u2693\ufe0e Installing Docker, ZelCash, and ZelBench Login as root, copy password you got from your VPS provider, and right click and paste. You won't see password being typed out but it's there so hit enter after pasting. Create a user, add user to the sudo group, install docker from their apt repo, add user to the docker group, and reboot. List of commands to do all this. Note Change USERNAME to name of your choice and replace USERNAME with one you chose in following commands adduser USERNAME adduser USERNAME sudo apt-get update && apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" && apt-get update && apt-get install docker-ce docker-ce-cli containerd.io -y adduser USERNAME docker reboot Note You will be prompted to add user info after you create a password. Just leave them blank and hit enter it is not required. Sign back in as the User you just created and update and upgrade packages and install required dependencies for zelcash. sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install build-essential pkg-config libc6-dev m4 \\ g++-multilib autoconf libtool ncurses-dev unzip git python \\ python-zmq zlib1g-dev wget curl bsdmainutils automake -y Create the Zelcash directory, Zelcash conf file, and bootstrap(optional but do recommend it for quick sync). mkdir ~/.zelcash touch ~/.zelcash/zelcash.conf cat << EOF > ~/.zelcash/zelcash.conf rpcuser=USERNAME rpcpassword=PASSWORD rpcallowip=127.0.0.1 rpcallowip=172.18.0.1 rpcport=16124 port=16125 zelnode=1 zelnodeprivkey=YOUR_ZELNODE_PK zelnodeoutpoint=YOUR_COLLATERAL_TXID zelnodeindex=TX_OUTPUT_INDEX server=1 daemon=1 txindex=1 listen=1 externalip=SERVER_IP_ADDR bind=SERVER_IP_ADDR addnode=explorer.zel.cash addnode=explorer2.zel.cash addnode=explorer.zel.zelcore.io addnode=blockbook.zel.network maxconnections=256 EOF Note Change rpcuser , rpcpassword , zelnodeprivkey , zelnodeoutpoint , zelnodeindex , externalip , and bind with your values. Best way to do this is copy this to a text editor such as notepad, replace values, then copy and paste it to the terminal. Optional Bootstrap to Sync Quick ```bash wget https://www.dropbox.com/s/kyqe8ji3g1yetfx/zel-bootstrap.zip; unzip zel-bootstrap.zip -d ~/.zelcash; rm zel-bootstrap.zip ``` This guide will be using the Apt repo to install Zelcash and Zelbench since you have no choice but to use the Apt repo to install the Zelbench package. If you want to build Zelcash from source follow guide from Zel's Gitbook . After installing Zelcash and Zelbench execute the script to install the zkSNARK params. echo 'deb https://apt.zel.cash/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list Note If the command failed to fetch the deb file try fetching it from Github using this line. ```bash echo 'deb https://zelcash.github.io/aptrepo/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list ``` bash gpg --keyserver keyserver.ubuntu.com --recv 4B69CA27A986265D bash gpg --export 4B69CA27A986265D | sudo apt-key add - bash sudo apt-get update && sudo apt install zelcash zelbench -y bash bash zelcash-fetch-params.sh Install ZelFlux \u2693\ufe0e Install Mongodb, Nodejs and Flux Install Mongodb and Nodejs as it is required for Zelflux. Although there are few methods to installing Mongodb and Nodejs this guide will use the recommended method by most. wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add - echo \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list sudo apt-get update && sudo apt-get install mongodb-org -y && sudo service mongod start && sudo systemctl enable mongod curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash source ~/.profile nvm install --lts Info Mongodb installation is using a package for Ubuntu 18.04 so if you are using a different os go to Mongodb's doc's and use deb package for your os. Start Zelcash, clone Zelflux repo, install Zelflux, and have Zelflux run using a background service such as screen/tmux. For this guide PM2 will be used to manage Zelflux. zelcashd >/dev/null 2 > & 1 git clone https://github.com/zelcash/zelflux.git touch ~/zelflux/config/userconfig.js cat << EOF > ~/zelflux/config/userconfig.js module.exports = { initial: { ipaddress: 'SERVER_IP_ADDRESS', zelid: 'YOUR_ZELID', cruxid: 'YOUR_CRUXID', testnet: false } } EOF Note Change SERVER_IP_ADDRESS , YOUR_ZELID , and YOUR_CRUXID to your values. Just as you did in step 3 for creating Zelcash conf file copy this over to a text editor, replace values, then paste it to the terminal. npm i -g pm2 pm2 startup systemd -u $( whoami ) sudo env PATH = $PATH :/home/ $( whoami ) /.nvm/versions/node/ $( node -v ) /bin pm2 startup systemd -u $( whoami ) --hp /home/ $( whoami ) > /dev/null pm2 start ~/zelflux/start.sh --name zelflux pm2 save Installation is now complete. You can now start your Zelnode from Zelcore/Zelmate. Please note that only Mongodb and Zelflux will restart on system restarts and that you would need to create a service for Zelcash on your own. This guide was mainly created to install Zelnode and Zelflux without using the script. Tip * Check out [PM2 Logrotate](https://www.npmjs.com/package/pm2-logrotate) to manage logs. * Highly recommend setting up logrotate functions for zelcash debug.log, .zelbenchmark debug.log, zelflux error.log, and mongo.log * Bootstrap Mongodb database using files from this [link](https://www.dropbox.com/s/ddznce9pp2kuup1/mongo_dump.tar.gz) Any donations are welcomed and appreciated. Thanks. CruxID dk808@zel.crux BTC 18i3ba5wkG8XoYT3y8JP58yWwvMgEkHNHK ZEL t1RaebuW5iav8QBVwuZ7WCx5SCaYm2WH2Sk ETH 0x9ec5f94f680da4f0be8b6492020c84d60f99b5b7 LTC LSvzrnPmpvNb4M9D9GHgMA3HA8ixQjigsT","title":"Set up ZelNode | Manually"},{"location":"zelnodes/zelnode_setupmanual/#deterministic-zelnode-and-zelflux-manual-install-guide","text":"This install guide will be using Ubuntu 18.04 as it's the Linux Distribution supported by Zel's Team. Requirements Collateral (10K Basic/ 25K Super/ 100K BAMF) Exchange List Control wallet and will recommend to use Zelcore SSH client such as MobaXterm or Putty VPS that meets the required specs for the tier | Tier | vCore | Ram | SSD | Bandwidth | |-------|-------|-------|--------|-------------------| | BAMF | 8 | 32 GB | 600 GB | 6 TB @ 100 mbps | | SUPER | 4 | 8 GB | 150 GB | 4 TB @ 100 mbps | | BASIC | 2 | 4 GB | 50 GB | 2.5 TB @ 100 mbps |","title":"Deterministic Zelnode and Zelflux Manual Install Guide"},{"location":"zelnodes/zelnode_setupmanual/#install-zelcash-and-zelbench","text":"Installing Docker, ZelCash, and ZelBench Login as root, copy password you got from your VPS provider, and right click and paste. You won't see password being typed out but it's there so hit enter after pasting. Create a user, add user to the sudo group, install docker from their apt repo, add user to the docker group, and reboot. List of commands to do all this. Note Change USERNAME to name of your choice and replace USERNAME with one you chose in following commands adduser USERNAME adduser USERNAME sudo apt-get update && apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" && apt-get update && apt-get install docker-ce docker-ce-cli containerd.io -y adduser USERNAME docker reboot Note You will be prompted to add user info after you create a password. Just leave them blank and hit enter it is not required. Sign back in as the User you just created and update and upgrade packages and install required dependencies for zelcash. sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install build-essential pkg-config libc6-dev m4 \\ g++-multilib autoconf libtool ncurses-dev unzip git python \\ python-zmq zlib1g-dev wget curl bsdmainutils automake -y Create the Zelcash directory, Zelcash conf file, and bootstrap(optional but do recommend it for quick sync). mkdir ~/.zelcash touch ~/.zelcash/zelcash.conf cat << EOF > ~/.zelcash/zelcash.conf rpcuser=USERNAME rpcpassword=PASSWORD rpcallowip=127.0.0.1 rpcallowip=172.18.0.1 rpcport=16124 port=16125 zelnode=1 zelnodeprivkey=YOUR_ZELNODE_PK zelnodeoutpoint=YOUR_COLLATERAL_TXID zelnodeindex=TX_OUTPUT_INDEX server=1 daemon=1 txindex=1 listen=1 externalip=SERVER_IP_ADDR bind=SERVER_IP_ADDR addnode=explorer.zel.cash addnode=explorer2.zel.cash addnode=explorer.zel.zelcore.io addnode=blockbook.zel.network maxconnections=256 EOF Note Change rpcuser , rpcpassword , zelnodeprivkey , zelnodeoutpoint , zelnodeindex , externalip , and bind with your values. Best way to do this is copy this to a text editor such as notepad, replace values, then copy and paste it to the terminal. Optional Bootstrap to Sync Quick ```bash wget https://www.dropbox.com/s/kyqe8ji3g1yetfx/zel-bootstrap.zip; unzip zel-bootstrap.zip -d ~/.zelcash; rm zel-bootstrap.zip ``` This guide will be using the Apt repo to install Zelcash and Zelbench since you have no choice but to use the Apt repo to install the Zelbench package. If you want to build Zelcash from source follow guide from Zel's Gitbook . After installing Zelcash and Zelbench execute the script to install the zkSNARK params. echo 'deb https://apt.zel.cash/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list Note If the command failed to fetch the deb file try fetching it from Github using this line. ```bash echo 'deb https://zelcash.github.io/aptrepo/ all main' | sudo tee /etc/apt/sources.list.d/zelcash.list ``` bash gpg --keyserver keyserver.ubuntu.com --recv 4B69CA27A986265D bash gpg --export 4B69CA27A986265D | sudo apt-key add - bash sudo apt-get update && sudo apt install zelcash zelbench -y bash bash zelcash-fetch-params.sh","title":"Install Zelcash and Zelbench"},{"location":"zelnodes/zelnode_setupmanual/#install-zelflux","text":"Install Mongodb, Nodejs and Flux Install Mongodb and Nodejs as it is required for Zelflux. Although there are few methods to installing Mongodb and Nodejs this guide will use the recommended method by most. wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add - echo \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list sudo apt-get update && sudo apt-get install mongodb-org -y && sudo service mongod start && sudo systemctl enable mongod curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash source ~/.profile nvm install --lts Info Mongodb installation is using a package for Ubuntu 18.04 so if you are using a different os go to Mongodb's doc's and use deb package for your os. Start Zelcash, clone Zelflux repo, install Zelflux, and have Zelflux run using a background service such as screen/tmux. For this guide PM2 will be used to manage Zelflux. zelcashd >/dev/null 2 > & 1 git clone https://github.com/zelcash/zelflux.git touch ~/zelflux/config/userconfig.js cat << EOF > ~/zelflux/config/userconfig.js module.exports = { initial: { ipaddress: 'SERVER_IP_ADDRESS', zelid: 'YOUR_ZELID', cruxid: 'YOUR_CRUXID', testnet: false } } EOF Note Change SERVER_IP_ADDRESS , YOUR_ZELID , and YOUR_CRUXID to your values. Just as you did in step 3 for creating Zelcash conf file copy this over to a text editor, replace values, then paste it to the terminal. npm i -g pm2 pm2 startup systemd -u $( whoami ) sudo env PATH = $PATH :/home/ $( whoami ) /.nvm/versions/node/ $( node -v ) /bin pm2 startup systemd -u $( whoami ) --hp /home/ $( whoami ) > /dev/null pm2 start ~/zelflux/start.sh --name zelflux pm2 save Installation is now complete. You can now start your Zelnode from Zelcore/Zelmate. Please note that only Mongodb and Zelflux will restart on system restarts and that you would need to create a service for Zelcash on your own. This guide was mainly created to install Zelnode and Zelflux without using the script. Tip * Check out [PM2 Logrotate](https://www.npmjs.com/package/pm2-logrotate) to manage logs. * Highly recommend setting up logrotate functions for zelcash debug.log, .zelbenchmark debug.log, zelflux error.log, and mongo.log * Bootstrap Mongodb database using files from this [link](https://www.dropbox.com/s/ddznce9pp2kuup1/mongo_dump.tar.gz) Any donations are welcomed and appreciated. Thanks. CruxID dk808@zel.crux BTC 18i3ba5wkG8XoYT3y8JP58yWwvMgEkHNHK ZEL t1RaebuW5iav8QBVwuZ7WCx5SCaYm2WH2Sk ETH 0x9ec5f94f680da4f0be8b6492020c84d60f99b5b7 LTC LSvzrnPmpvNb4M9D9GHgMA3HA8ixQjigsT","title":"Install ZelFlux"},{"location":"zelnodes/zelnode_setupscript/","text":"ZelNode Script Install \u2693\ufe0e 1) How run script bash -i <(curl -s https://raw.githubusercontent.com/XK4MiLX/zelnode/master/multitoolbox.sh) if this way not working you can try: wget https://raw.githubusercontent.com/XK4MiLX/zelnode/master/multitoolbox.sh && chmod +x multitoolbox.sh && ./multitoolbox.sh 1) Menu: 2) HOW USE MULTITOOLBOX TO SETUP ZELNODE: Step 1 1 - Log to your root accont 2 - Select option \"Install Docker\" 3 - When u will see window put your username and hit enter If everything goes well you will see Step 2 1 - Reboot pc and log to your user accont or switch user to user accont ( scripts will ask about it on end of first steps ) 2 - Run scripts again and select option \"Install ZelNode\" If everything goes well you will see Step 3 1 - Visit http://YOUR_NODE_IP:16126 If everything goes well you will see Troubleshooting \u2693\ufe0e Step 1 1 - If node not working first run script again and select option \"ZelNode analizer and fixer\" nr 4 Data mismatch is a common case You can found your correct settings here (ZelCore) ZelNode Multitoolbox \u2693\ufe0e Docker installation 1) You need put username only 2) Error controls Node installation 1) Ability to disable firewall diuring installation 2) Zel ID veryfication 3) Supporting installation in LXC continer 4) Auto-detection bootstrap archive if its in user home directory 5) Ability to download bootstrap from own source 6) ZelFlux auto-update via CronTab 7) Error controls 9) Supporting PM2 10) Improvement package installation 11) Restarting benchmark after zelflux installation 12) Watchgod for zelnode 13) MongoDB bootstrap 14) Importing old settings ZelNode analizer and fixer 1) Verification errors 2) Fix build in script Any donations are welcomed and appreciated. Thanks. CruxID: k4mil@zel.crux ZEL: t1f66kBo9xzpgPJV6wvzT7MY6unpm42kvST BTC: 1NDVjrP1zg35nfSD1WBKyYSBf8dgJ8AKay ETH: 0xf515e0e2ba9347c208418c88a7d75bee3288a010 LTC: LgST14gr5LH93U8NBeAdFZVwsLzxTBRTq8","title":"Set Up ZelNode | Alternate"},{"location":"zelnodes/zelnode_setupscript/#zelnode-script-install","text":"1) How run script bash -i <(curl -s https://raw.githubusercontent.com/XK4MiLX/zelnode/master/multitoolbox.sh) if this way not working you can try: wget https://raw.githubusercontent.com/XK4MiLX/zelnode/master/multitoolbox.sh && chmod +x multitoolbox.sh && ./multitoolbox.sh 1) Menu: 2) HOW USE MULTITOOLBOX TO SETUP ZELNODE: Step 1 1 - Log to your root accont 2 - Select option \"Install Docker\" 3 - When u will see window put your username and hit enter If everything goes well you will see Step 2 1 - Reboot pc and log to your user accont or switch user to user accont ( scripts will ask about it on end of first steps ) 2 - Run scripts again and select option \"Install ZelNode\" If everything goes well you will see Step 3 1 - Visit http://YOUR_NODE_IP:16126 If everything goes well you will see","title":"ZelNode Script Install"},{"location":"zelnodes/zelnode_setupscript/#troubleshooting","text":"Step 1 1 - If node not working first run script again and select option \"ZelNode analizer and fixer\" nr 4 Data mismatch is a common case You can found your correct settings here (ZelCore)","title":"Troubleshooting"},{"location":"zelnodes/zelnode_setupscript/#zelnode-multitoolbox","text":"Docker installation 1) You need put username only 2) Error controls Node installation 1) Ability to disable firewall diuring installation 2) Zel ID veryfication 3) Supporting installation in LXC continer 4) Auto-detection bootstrap archive if its in user home directory 5) Ability to download bootstrap from own source 6) ZelFlux auto-update via CronTab 7) Error controls 9) Supporting PM2 10) Improvement package installation 11) Restarting benchmark after zelflux installation 12) Watchgod for zelnode 13) MongoDB bootstrap 14) Importing old settings ZelNode analizer and fixer 1) Verification errors 2) Fix build in script Any donations are welcomed and appreciated. Thanks. CruxID: k4mil@zel.crux ZEL: t1f66kBo9xzpgPJV6wvzT7MY6unpm42kvST BTC: 1NDVjrP1zg35nfSD1WBKyYSBf8dgJ8AKay ETH: 0xf515e0e2ba9347c208418c88a7d75bee3288a010 LTC: LgST14gr5LH93U8NBeAdFZVwsLzxTBRTq8","title":"ZelNode Multitoolbox"},{"location":"zelnodes/zelnodes/","text":"","title":"Zel Computational Network Overview"}]}